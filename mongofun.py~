import pymongo
from pymongo import MongoClient

class MongoFun:
   
    def __init__(self):
        """this function making connection to database"""
        try:
            self.conn = MongoClient('mongodb://localhost:27017/')
        except ConnectionFailure,e:
            sys.stderr.write("could not connect to MongoDb:%s"%e)
            sys.exit(1)   
        self.db = self.conn['IOT']
        assert self.db.connection == self.conn
    
    def FetchDbNames(self):
        """this function giving you all database name"""
        return self.conn.database_names()
    
    def SwitchDb(self,database):
        """this function is switching connection of database one-to other"""
        self.db=self.conn[database]
        print "you are currently on ",database

    def GetCollection(self):
        """this database give you database collection names and that is really important"""
        return self.db.collection_names()
     
    def addUser(self,userData):
        """this function is used when we have to insert new user"""
	self.db['users'].insert(userData,safe=True)
        print "user is successfully inserted"

    def addDevice(self,email,deviceId,deviceKey):
        """function take 3 arguments email or id and deviceId deviceKey that genrated on main file
           ->first devices added to user.devices after,
           -> then create deivice database with deviceId"""
        

    
        

    
if __name__ == '__main__':
    """this is for testing function and all 'coz i hate unit testing """
    #test class __init__
    mongofun=MongoFun()
    
    #test FetchDbNames function
    print mongofun.FetchDbNames()
    
    #test GetCollection function
    print mongofun.GetCollection()

    #test add user in users database
    userData={"email":"ceaniket@gmail.com",
              "password":"!!@@##apAP90",
              "devices":{}}
    mongofun.addUser(userData)
    
    
    
    
